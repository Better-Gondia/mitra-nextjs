import { ChatMessage, Language } from "@/types";
import { Role } from "@prisma/client/index-browser";
import { clsx, type ClassValue } from "clsx";
import { twMerge } from "tailwind-merge";
import { ComplaintType, Language as PrismaLanguage } from "@prisma/client";
import { translateServer } from "./server-utils";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

export function generateComplaintIdFromDate(
  complaintId: number,
  createdAt: string | Date = new Date()
): string {
  const date = new Date(createdAt); // Works with ISO string or Date object

  const dd = String(date.getDate()).padStart(2, "0");
  const mm = String(date.getMonth() + 1).padStart(2, "0"); // Month is 0-indexed
  const yy = String(date.getFullYear()).slice(-2);

  const paddedId = String(complaintId).padStart(4, "0");

  return `BG-${dd}${mm}${yy}-${paddedId}`;
}

export function formatCreatedAtLabel(createdAt: string | Date): string {
  const date = new Date(createdAt);

  const options: Intl.DateTimeFormatOptions = {
    month: "short", // e.g., "Jul"
    day: "numeric", // e.g., "7"
    year: "numeric", // e.g., "2025"
  };

  const formattedDate = date.toLocaleDateString("en-US", options);
  return `ЁЯХТ ${formattedDate}`;
}

export const formatTimeAgo = (dateString: string) => {
  const now = new Date();
  const date = new Date(dateString);
  const diffInHours = Math.floor(
    (now.getTime() - date.getTime()) / (1000 * 60 * 60)
  );

  if (diffInHours < 1) return "Just now";
  if (diffInHours < 24) return `${diffInHours} hours ago`;
  const days = Math.floor(diffInHours / 24);
  return `${days} ${days === 1 ? "day" : "days"} ago`;
};

export const getBotMessage = (content: string): ChatMessage => {
  return {
    id: Date.now(),
    content,
    messageType: "bot",
    isRead: false,
    createdAt: new Date().toISOString(),
  };
};

export const getCategoryIcon = (
  category: "roads" | "water" | "electricity" | "sanitation" | string
) => {
  const icons: Record<string, string> = {
    roads: "ЁЯЫгя╕П",
    water: "ЁЯТз",
    electricity: "тЪб",
    sanitation: "ЁЯЧСя╕П",
  };
  return icons[category] || "ЁЯУЭ";
};

export const getStatusColor = (status: string) => {
  switch (status) {
    case "pending":
      return "bg-yellow-100 text-yellow-800";
    case "in_progress":
      return "bg-blue-100 text-blue-800";
    case "resolved":
      return "bg-green-100 text-green-800";
    case "closed":
      return "bg-gray-100 text-gray-800";
    default:
      return "bg-gray-100 text-gray-800";
  }
};

export const isAdmin = (role?: Role): boolean => {
  return role == "ADMIN" || role == "SUPERADMIN";
};

export const resetApp = () => {
  localStorage.removeItem("language");
  localStorage.removeItem("authStep");
  localStorage.removeItem("userData");
  window.location.reload();
};

export function normalizeDigits(str: string) {
  return str.replace(/[реж-реп]/g, (d) => String(d.charCodeAt(0) - 0x0966));
}

export function getRandom10DigitNumber() {
  let digits = "0123456789".split("");

  for (let i = digits.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [digits[i], digits[j]] = [digits[j], digits[i]];
  }

  if (digits[0] === "0") {
    for (let i = 1; i < digits.length; i++) {
      if (digits[i] !== "0") {
        [digits[0], digits[i]] = [digits[i], digits[0]];
        break;
      }
    }
  }

  return digits.slice(0, 10).join("");
}

export function getUserLoggedUrlMessage(
  language: PrismaLanguage,
  userSlug: string
): string {
  const messages = {
    [PrismaLanguage.ENGLISH]: `Please visit our website to track your complaint status. Thank you for trusting Better Gondia Mitra ЁЯЩП \n \nЁЯСЙ https://mitra.bettergondia.org?user=${userSlug}`,
    [PrismaLanguage.HINDI]: `рдЕрдкрдиреА рд╢рд┐рдХрд╛рдпрдд рдХреА рд╕реНрдерд┐рддрд┐ рдЯреНрд░реИрдХ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХреГрдкрдпрд╛ рд╣рдорд╛рд░реА рд╡реЗрдмрд╕рд╛рдЗрдЯ рдкрд░ рдЬрд╛рдПрдВред рдмреИрдЯрд░ рдЧреЛрдВрджрд┐рдпрд╛ рдорд┐рддреНрд░ рдкрд░ рднрд░реЛрд╕рд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж ЁЯЩП \n \nЁЯСЙ https://mitra.bettergondia.org?user=${userSlug}`,
    [PrismaLanguage.MARATHI]: `рддреБрдордЪреНрдпрд╛ рддрдХреНрд░рд╛рд░реАрдЪреА рд╕реНрдерд┐рддреА рдЯреНрд░реЕрдХ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдХреГрдкрдпрд╛ рдЖрдордЪреНрдпрд╛ рд╡реЗрдмрд╕рд╛рдЗрдЯрд▓рд╛ рднреЗрдЯ рджреНрдпрд╛. рдмреИрдЯрд░ рдЧреЛрдВрджрд┐рдпрд╛ рдорд┐рддреНрд░рд╛рд╡рд░ рд╡рд┐рд╢реНрд╡рд╛рд╕ рдареЗрд╡рд▓реНрдпрд╛рдмрджреНрджрд▓ рдзрдиреНрдпрд╡рд╛рдж ЁЯЩП \n \nЁЯСЙ https://mitra.bettergondia.org?user=${userSlug}`,
  };

  return messages[language] || messages[PrismaLanguage.ENGLISH];
}

export async function getWhatsappConfirmationMessage(
  language: PrismaLanguage,
  customerName: string,
  complaintType: ComplaintType,
  formattedComplaintId: string,
  taluka: string | null,
  description: string | null,
  location: string | null,
  mobileNo: string
): Promise<string> {
  const isSuggestion = complaintType === ComplaintType.SUGGESTION;
  const typeText = isSuggestion ? "suggestion" : "complaint";
  const typeEmoji = isSuggestion ? "ЁЯТб" : "тЪая╕П";
  const typeLabel = await translateServer(
    typeText,
    language.toLowerCase() as Language
  );

  const messages = {
    [PrismaLanguage.ENGLISH]: `тЬЕ *${typeLabel} Successfully Submitted!*

Dear ${customerName},
Your ${typeText} has been successfully submitted to the Better Gondia Mitra.

ЁЯУЛ *${typeLabel} Details:*
тАв ${typeLabel} ID: *${formattedComplaintId}*
тАв Type: ${typeEmoji} ${typeLabel}
тАв Taluka: ${taluka || "Not specified"}
тАв Status: ЁЯЯв Open (Under Review)

ЁЯУЭ *Description:*
${description || "No description provided"}

ЁЯУН *Location:* ${location || "Not specified"}

тП░ *Submission Time:* ${new Date().toLocaleString("en-IN", {
      timeZone: "Asia/Kolkata",
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    })}

ЁЯУЮ *Your Contact:* ${mobileNo}

ЁЯТб *Keep this ${typeLabel} ID safe for future reference!*

Thank you for taking the time to help improve Gondia! Your feedback is valuable to us. ЁЯЩП

*Better Gondia Mitra*`,

    [PrismaLanguage.HINDI]: `тЬЕ *${typeLabel} рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЬрдорд╛ рдХрд┐рдпрд╛ рдЧрдпрд╛!*

рдкреНрд░рд┐рдп ${customerName},
рдЖрдкрдХреА ${typeLabel} рдмреИрдЯрд░ рдЧреЛрдВрджрд┐рдпрд╛ рдорд┐рддреНрд░ рдХреЛ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЬрдорд╛ рдХреА рдЧрдИ рд╣реИред

ЁЯУЛ *${typeLabel} рд╡рд┐рд╡рд░рдг:*
тАв ${typeLabel} ID: *${formattedComplaintId}*
тАв рдкреНрд░рдХрд╛рд░: ${typeEmoji} ${typeLabel}
тАв рддрд╛рд▓реБрдХрд╛: ${taluka || "рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдирд╣реАрдВ"}
тАв рд╕реНрдерд┐рддрд┐: ЁЯЯв рдЦреБрд▓рд╛ (рд╕рдореАрдХреНрд╖рд╛ рдХреЗ рддрд╣рдд)

ЁЯУЭ *рд╡рд┐рд╡рд░рдг:*
${description || "рдХреЛрдИ рд╡рд┐рд╡рд░рдг рдкреНрд░рджрд╛рди рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЧрдпрд╛"}

ЁЯУН *рд╕реНрдерд╛рди:* ${location || "рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдирд╣реАрдВ"}

тП░ *рдЬрдорд╛ рдХрд░рдиреЗ рдХрд╛ рд╕рдордп:* ${new Date().toLocaleString("hi-IN", {
      timeZone: "Asia/Kolkata",
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    })}

ЁЯУЮ *рдЖрдкрдХрд╛ рд╕рдВрдкрд░реНрдХ:* ${mobileNo}

ЁЯТб *рднрд╡рд┐рд╖реНрдп рдХреЗ рд╕рдВрджрд░реНрдн рдХреЗ рд▓рд┐рдП рдЗрд╕ ${typeLabel} ID рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░рдЦреЗрдВ!*

рдЧреЛрдВрджрд┐рдпрд╛ рдХреЛ рдмреЗрд╣рддрд░ рдмрдирд╛рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рдордп рдирд┐рдХрд╛рд▓рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж! рдЖрдкрдХреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рд╣рдорд╛рд░реЗ рд▓рд┐рдП рдореВрд▓реНрдпрд╡рд╛рди рд╣реИред ЁЯЩП

*рдмреИрдЯрд░ рдЧреЛрдВрджрд┐рдпрд╛ рдорд┐рддреНрд░*`,

    [PrismaLanguage.MARATHI]: `тЬЕ *${typeLabel} рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдиреЛрдВрджрдгреА рдХреЗрд▓реЗ!*

рдкреНрд░рд┐рдп ${customerName},
рддреБрдордЪреА ${typeLabel} рдмреИрдЯрд░ рдЧреЛрдВрджрд┐рдпрд╛ рдорд┐рддреНрд░рд╛рдХрдбреЗ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдиреЛрдВрджрдгреА рдХреЗрд▓реА рдЧреЗрд▓реА рдЖрд╣реЗ.

ЁЯУЛ *${typeLabel} рддрдкрд╢реАрд▓:*
тАв ${typeLabel} ID: *${formattedComplaintId}*
тАв рдкреНрд░рдХрд╛рд░: ${typeEmoji} ${typeLabel}
тАв рддрд╛рд▓реБрдХрд╛: ${taluka || "рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдирд╛рд╣реА"}
тАв рд╕реНрдерд┐рддреА: ЁЯЯв рдЙрдШрдбреЗ (рдкреБрдирд░рд╛рд╡рд▓реЛрдХрдирд╛рдЦрд╛рд▓реА)

ЁЯУЭ *рд╡рд░реНрдгрди:*
${description || "рдХреЛрдгрддреЗрд╣реА рд╡рд░реНрдгрди рдкреНрд░рджрд╛рди рдХреЗрд▓реЗ рдирд╛рд╣реА"}

ЁЯУН *рд╕реНрдерд╛рди:* ${location || "рдирд┐рд░реНрджрд┐рд╖реНрдЯ рдирд╛рд╣реА"}

тП░ *рдиреЛрдВрджрдгреА рд╡реЗрд│:* ${new Date().toLocaleString("mr-IN", {
      timeZone: "Asia/Kolkata",
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    })}

ЁЯУЮ *рддреБрдордЪрд╛ рд╕рдВрдкрд░реНрдХ:* ${mobileNo}

ЁЯТб *рднрд╡рд┐рд╖реНрдпрд╛рддреАрд▓ рд╕рдВрджрд░реНрднрд╛рд╕рд╛рдареА рд╣реА ${typeLabel} ID рд╕реБрд░рдХреНрд╖рд┐рдд рдареЗрд╡рд╛!*

рдЧреЛрдВрджрд┐рдпрд╛ рд╕реБрдзрд╛рд░рдгреНрдпрд╛рдд рдорджрдд рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рд╡реЗрд│ рдХрд╛рдврд▓реНрдпрд╛рдмрджреНрджрд▓ рдзрдиреНрдпрд╡рд╛рдж! рддреБрдордЪрд╛ рдЕрднрд┐рдкреНрд░рд╛рдп рдЖрдордЪреНрдпрд╛рд╕рд╛рдареА рдореМрд▓реНрдпрд╡рд╛рди рдЖрд╣реЗред ЁЯЩП

*рдмреИрдЯрд░ рдЧреЛрдВрджрд┐рдпрд╛ рдорд┐рддреНрд░*`,
  };

  return messages[language] || messages[PrismaLanguage.ENGLISH];
}

export function getShortConfirmationMessage(
  language: PrismaLanguage,
  customerName: string,
  formattedComplaintId: string
): string {
  const messages = {
    [PrismaLanguage.ENGLISH]: `Hello ${customerName}! ЁЯСЛ

Your complaint has been received.

ЁЯУЛ Complaint ID: *${formattedComplaintId}*
ЁЯУЕ Date: ${new Date().toLocaleString("en-IN", {
      timeZone: "Asia/Kolkata",
      year: "numeric",
      month: "long",
      day: "numeric",
    })}`,

    [PrismaLanguage.HINDI]: `рдирдорд╕реНрддреЗ ${customerName}! ЁЯСЛ

рдЖрдкрдХреА рд╢рд┐рдХрд╛рдпрдд рдкреНрд░рд╛рдкреНрдд рд╣реЛ рдЧрдИ рд╣реИред

ЁЯУЛ рд╢рд┐рдХрд╛рдпрдд ID: *${formattedComplaintId}*
ЁЯУЕ рддрд╛рд░реАрдЦ: ${new Date().toLocaleString("hi-IN", {
      timeZone: "Asia/Kolkata",
      year: "numeric",
      month: "long",
      day: "numeric",
    })}`,

    [PrismaLanguage.MARATHI]: `рдирдорд╕реНрдХрд╛рд░ ${customerName}! ЁЯСЛ

рддреБрдордЪреА рддрдХреНрд░рд╛рд░ рдкреНрд░рд╛рдкреНрдд рдЭрд╛рд▓реА рдЖрд╣реЗ.

ЁЯУЛ рддрдХреНрд░рд╛рд░ ID: *${formattedComplaintId}*
ЁЯУЕ рддрд╛рд░реАрдЦ: ${new Date().toLocaleString("mr-IN", {
      timeZone: "Asia/Kolkata",
      year: "numeric",
      month: "long",
      day: "numeric",
    })}`,
  };

  return messages[language] || messages[PrismaLanguage.ENGLISH];
}

export const messages = {
  ENGLISH: {
    COMPLAINT_DESCRIPTION:
      "*COMPLAINT DETAILS* тЬНЁЯП╗ \n\nYour input makes an impact! ЁЯТб\n\nPlease type details of your complaint below in *simple, clear words.*\n\n*One complaint* per message helps us act faster тЬЕ",
    MEDIA_UPLOAD:
      "*PHOTO-VIDEO* ЁЯУ╕\n\nGot visuals of the problem?\n\nSend *photos or a short video* of the problem for faster action or simply type 'skip'.",
    LOCATION:
      "*LOCATION*ЁЯУН\n\nPlease share or write the *exact location details* of the issue or simply type 'skip'.\n\nEg. Near ABC Building, XYZ Road, QRS Colony. Landmark: TUV Building_",
    CANCEL:
      "No worries! ЁЯЩПЁЯП╗\n\nJust type *Hello* to start over anytime after five minutes.\n\nBye! ЁЯСЛЁЯП╗\n\nSee you again later!тШ║я╕П",
    SUGGESTION_DESCRIPTION:
      "Got an idea?ЁЯТб\n\nтЬНЁЯП╗ Share your suggestions/ideas in simple and clear words.\n\nAttach images/videos ЁЯУО and location ЁЯУН if relevant.",
    SUGGESTION_CONFIRMATION:
      "Your suggestion has been submitted successfully! ЁЯОп\n\nWeтАЩll review it and get in touch with you if needed. ЁЯЩПЁЯП╗",
    BYE_FOR_NOW:
      "ЁЯСЛ Bye for now!\nYou can just say тАЬHelloтАЭ anytime you want to share another complaint or suggestion. ЁЯШК",
  },
  HINDI: {
    COMPLAINT_DESCRIPTION:
      "*рд╢рд┐рдХрд╛рдпрдд рд╡рд┐рд╡рд░рдг* тЬНЁЯП╗\n\nрдХреГрдкрдпрд╛ рдЕрдкрдиреА рд╢рд┐рдХрд╛рдпрдд рд╕рд╛рдлрд╝ рдФрд░ рдЖрд╕рд╛рди рд╢рдмреНрджреЛрдВ рдореЗрдВ рд▓рд┐рдЦреЗрдВред\n\nрдПрдХ рд╕рдВрджреЗрд╢ рдореЗрдВ *рдПрдХ рд╣реА рд╢рд┐рдХрд╛рдпрдд рд▓рд┐рдЦреЗрдВ* рддрд╛рдХрд┐ рд╣рдо рдЬрд▓реНрджреА рдХрд╛рд░реНрдпрд╡рд╛рд╣реА рдХрд░ рд╕рдХреЗрдВред ЁЯЩПЁЯП╗",
    MEDIA_UPLOAD:
      "*рдлреЛрдЯреЛтАУрд╡реАрдбрд┐рдпреЛ* ЁЯУ╕\n\nрдХреНрдпрд╛ рдЖрдкрдХреЗ рдкрд╛рд╕ рд╕рдорд╕реНрдпрд╛ рдХреА рддрд╕реНрд╡реАрд░ рдпрд╛ рд╡реАрдбрд┐рдпреЛ рд╣реИ?\n\nрдЬрд▓реНрдж рдХрд╛рд░реНрд░рд╡рд╛рдИ рдХреЗ рд▓рд┐рдП *рдлреЛрдЯреЛ рдпрд╛ рдЫреЛрдЯрд╛ рд╡реАрдбрд┐рдпреЛ* рднреЗрдЬреЗрдВ тАФ рдпрд╛ 'skip' рд▓рд┐рдЦреЗрдВред",
    LOCATION:
      "*рд╕реНрдерд╛рди* ЁЯУН\n\nрдХреГрдкрдпрд╛ рд╕рдорд╕реНрдпрд╛ рдХрд╛ *рд╕рдЯреАрдХ рд╕реНрдерд╛рди* рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ рдпрд╛ рд▓рд┐рдЦреЗрдВ тАФ рдпрд╛ 'skip' рд▓рд┐рдЦреЗрдВред\n\nрдЙрджрд╛рд╣рд░рдг: ABC рдмрд┐рд▓реНрдбрд┐рдВрдЧ рдХреЗ рдкрд╛рд╕, XYZ рд░реЛрдб, QRS рдХреЙрд▓реЛрдиреАред рд▓реИрдВрдбрдорд╛рд░реНрдХ: TUV рдмрд┐рд▓реНрдбрд┐рдВрдЧ_",
    CANCEL:
      "*рдХреЛрдИ рдмрд╛рдд рдирд╣реАрдВ!* ЁЯЩВ\n\nрджреЛрдмрд╛рд░рд╛ рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП *рдкрд╛рдБрдЪ рдорд┐рдирдЯ* рдмрд╛рдж рдХрднреА рднреА 'Hello' рд▓рд┐рдЦреЗрдВред\n\nрдлрд┐рд░ рдорд┐рд▓реЗрдВрдЧреЗ! ЁЯШК",
    SUGGESTION_DESCRIPTION:
      "*рдХреЛрдИ рд╕реБрдЭрд╛рд╡ рдпрд╛ рд╡рд┐рдЪрд╛рд░ рд╣реИ?* ЁЯТб\n\nтЬНЁЯП╗ рдЕрдкрдиреЗ рд╕реБрдЭрд╛рд╡ рдпрд╛ рд╡рд┐рдЪрд╛рд░ рдЖрд╕рд╛рди рдФрд░ рд╕реНрдкрд╖реНрдЯ рд╢рдмреНрджреЛрдВ рдореЗрдВ рд▓рд┐рдЦреЗрдВред\n\n рд░реВрд░рдд рд╣реЛ рддреЛ рдлреЛрдЯреЛ/рд╡реАрдбрд┐рдпреЛ ЁЯУ╕ рдФрд░ рд╕реНрдерд╛рди ЁЯУН рднреА рдЬреЛрдбрд╝реЗрдВред",
    SUGGESTION_CONFIRMATION:
      "*рдзрдиреНрдпрд╡рд╛рдж!* ЁЯОЙ\n\nрдЖрдкрдХрд╛ рд╕реБрдЭрд╛рд╡ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкреНрд░рд╛рдкреНрдд рд╣реБрдЖ! ЁЯОп\n\nрд╣рдо рдЗрд╕рдХреА рд╕рдореАрдХреНрд╖рд╛ рдХрд░реЗрдВрдЧреЗ рдФрд░ рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реЛрдиреЗ рдкрд░ рдЖрдкрд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВрдЧреЗред ЁЯЩПЁЯП╗\n\nрдлрд┐рд░ рдорд┐рд▓реЗрдВрдЧреЗ! ЁЯШК",
    BYE_FOR_NOW:
      "ЁЯСЛ рдлрд┐рд▓рд╣рд╛рд▓ рдХреЗ рд▓рд┐рдП рдЕрд▓рд╡рд┐рджрд╛!\nрдЬрдм рднреА рдЖрдк рдХреЛрдИ рдФрд░ рд╢рд┐рдХрд╛рдпрдд рдпрд╛ рд╕реБрдЭрд╛рд╡ рднреЗрдЬрдирд╛ рдЪрд╛рд╣реЗрдВ, рдмрд╕ тАЬHelloтАЭ рд▓рд┐рдЦ рджреАрдЬрд┐рдПред ЁЯШК",
  },
  MARATHI: {
    COMPLAINT_DESCRIPTION:
      "*рддрдХреНрд░рд╛рд░ рддрдкрд╢реАрд▓* тЬНЁЯП╗\n\nрдХреГрдкрдпрд╛ рддреБрдордЪреА рддрдХреНрд░рд╛рд░ рд╕реНрдкрд╖реНрдЯ рдЖрдгрд┐ рд╕реЛрдкреНрдпрд╛ рд╢рдмреНрджрд╛рдВрдд рд▓рд┐рд╣рд╛.\n\nрдПрдХрд╛ рд╕рдВрджреЗрд╢рд╛рдд *рдПрдХрдЪ рддрдХреНрд░рд╛рд░ рд▓рд┐рд╣рд╛*, рддреНрдпрд╛рдореБрд│реЗ рдЖрдореНрд╣реА рд▓рд╡рдХрд░ рдХрд╛рд░рд╡рд╛рдИ рдХрд░реВ рд╢рдХрддреЛ. ЁЯЩПЁЯП╗",
    MEDIA_UPLOAD:
      "*рдлреЛрдЯреЛ-рд╡реНрд╣рд┐рдбрд┐рдУ* ЁЯУ╕ \n\nрд╕рдорд╕реНрдпреЗрдЪрд╛ рдлреЛрдЯреЛ рдХрд┐рдВрд╡рд╛ рд╡реНрд╣рд┐рдбрд┐рдУ рдЖрд╣реЗ рдХрд╛?\n\nрдЬрд▓рдж рдХрд╛рд░рд╡рд╛рдИрд╕рд╛рдареА *рдлреЛрдЯреЛ рдХрд┐рдВрд╡рд╛ рдЫреЛрдЯрд╛ рд╡реНрд╣рд┐рдбрд┐рдУ* рдкрд╛рдард╡рд╛ тАФ рдХрд┐рдВрд╡рд╛ 'skip' рд▓рд┐рд╣рд╛.",
    LOCATION:
      "*рдард┐рдХрд╛рдг* ЁЯУН\n\nрдХреГрдкрдпрд╛ рд╕рдорд╕реНрдпреЗрдЪреЗ *рдЕрдЪреВрдХ рдард┐рдХрд╛рдг* рд╢реЗрдЕрд░ рдХрд░рд╛ рдХрд┐рдВрд╡рд╛ рд▓рд┐рд╣рд╛ тАФ рдХрд┐рдВрд╡рд╛ 'skip' рд▓рд┐рд╣рд╛.\n\nрдЙрджрд╛.: ABC рдмрд┐рд▓реНрдбрд┐рдВрдЧрдЬрд╡рд│, XYZ рд░реЛрдб, QRS рдХреЙрд▓рдиреА. рд▓рдБрдбрдорд╛рд░реНрдХ: TUV рдмрд┐рд▓реНрдбрд┐рдВрдЧ_",
    CANCEL:
      "*рдХрд╛рд╣реА рд╣рд░рдХрдд рдирд╛рд╣реА!* ЁЯЩВ\n\nрдкреБрдиреНрд╣рд╛ рд╕реБрд░реВ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА *рдкрд╛рдЪ рдорд┐рдирд┐рдЯрд╛рдВрдирдВрддрд░* рдХрдзреАрд╣реА 'Hello' рдЯрд╛рдЗрдк рдХрд░рд╛.\n\nрдкреБрдиреНрд╣рд╛ рднреЗрдЯреВрдпрд╛! ЁЯШК",
    SUGGESTION_DESCRIPTION:
      "*рдХрд╛рд╣реА рд╕реВрдЪрдирд╛ рдХрд┐рдВрд╡рд╛ рдХрд▓реНрдкрдирд╛ рдЖрд╣реЗ рдХрд╛? *ЁЯТб\n\n тЬНЁЯП╗ рддреБрдордЪреНрдпрд╛ рд╕реВрдЪрдирд╛ рдХрд┐рдВрд╡рд╛ рдХрд▓реНрдкрдирд╛ рд╕реЛрдкреНрдпрд╛ рдЖрдгрд┐ рд╕реНрдкрд╖реНрдЯ рд╢рдмреНрджрд╛рдВрдд рд▓рд┐рд╣рд╛.\n\nрдЧрд░рдЬ рдЕрд╕рд▓реНрдпрд╛рд╕ рдлреЛрдЯреЛ/рд╡реНрд╣рд┐рдбрд┐рдУ ЁЯУ╕ рдЖрдгрд┐ рдард┐рдХрд╛рдг ЁЯУН рдЬреЛрдбрд╛.",
    SUGGESTION_CONFIRMATION:
      "*рдзрдиреНрдпрд╡рд╛рдж!* ЁЯОЙ\n\nрддреБрдордЪреА рд╕реВрдЪрдирд╛ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдкреНрд░рд╛рдкреНрдд рдЭрд╛рд▓реА! ЁЯОп\n\nрдЖрдореНрд╣реА рддрд┐рдЪреА рддрдкрд╛рд╕рдгреА рдХрд░реВ рдЖрдгрд┐ рдЧрд░рдЬ рдЕрд╕рд▓реНрдпрд╛рд╕ рддреБрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рдХрд░реВ. ЁЯЩПЁЯП╗\n\nрдкреБрдиреНрд╣рд╛ рднреЗрдЯреВрдпрд╛! ЁЯШК",
    BYE_FOR_NOW:
      "ЁЯСЛ рдЖрддреНрддрд╛рд╕рд╛рдареА рдирд┐рд░реЛрдк!\nрдЬреЗрд╡реНрд╣рд╛ рдХрдзреА рддреБрдореНрд╣рд╛рд▓рд╛ рдирд╡реА рддрдХреНрд░рд╛рд░ рдХрд┐рдВрд╡рд╛ рд╕реВрдЪрдирд╛ рджреНрдпрд╛рдпрдЪреА рдЕрд╕реЗрд▓, рддреЗрд╡реНрд╣рд╛ рдлрдХреНрдд тАЬHelloтАЭ рд▓рд┐рд╣рд╛. ЁЯШК",
  },
};

export const isValidMessage = (message: string | null): boolean => {
  if (!message) return false;
  if (
    message.trim().length <= 5 &&
    message.trim().toLowerCase().includes("null")
  ) {
    return false;
  }
  return true;
};
